<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sln.dao.shop.write.member.MemberApplyDrawingWriteDao">
	<resultMap id="MemberApplyDrawingResult" type="com.sln.entity.member.MemberApplyDrawing">
			<result property="id" column="id" />
			<result property="memberId" column="member_id" />
			<result property="memberName" column="member_name" />
			<result property="code" column="code" />
			<result property="money" column="money" />
			<result property="createTime" column="create_time" />
			<result property="auditingTime" column="auditing_time" />
			<result property="handleTime" column="handle_time" />
			<result property="bank" column="bank" />
			<result property="bankCode" column="bank_code" />
			<result property="state" column="state" />
			<result property="failReason" column="fail_reason" />
			<result property="optId" column="opt_id" />
			<result property="optName" column="opt_name" />
	</resultMap>
	<sql id="getCondition">
        <where>
            <if test="queryMap.q_memberId != null and queryMap.q_memberId !=''">
                and member_id = #{queryMap.q_memberId}
            </if>
            <if test="queryMap.q_memberName != null and queryMap.q_memberName !=''">
                and member_name like CONCAT('%', #{queryMap.q_memberName}, '%')
            </if>
            <if test="queryMap.q_startTime != null and queryMap.q_startTime != ''">
				and `create_time` &gt;= #{queryMap.q_startTime}
			</if>
            <if test="queryMap.q_endTime != null and queryMap.q_endTime != ''">
				and `create_time` &lt;= #{queryMap.q_endTime}
			</if>
            <if test="queryMap.q_bank != null and queryMap.q_bank !=''">
                and bank like CONCAT('%', #{queryMap.q_bank}, '%')
            </if>
            <if test="queryMap.q_state != null and queryMap.q_state !=''">
                and state = #{queryMap.q_state}
            </if>
            <if test="queryMap.q_failReason != null and queryMap.q_failReason !=''">
                and fail_reason like CONCAT('%', #{queryMap.q_failReason}, '%')
            </if>
        </where>
    </sql>
    
	<select id="get" parameterType="Integer" resultMap="MemberApplyDrawingResult">
		select
		   *
		from `member_apply_drawing`
		where `id` = #{id}
	</select>
	
	<select id="getMemberApplyDrawingsCount" parameterType="java.util.Map" resultType="Integer">
		select
		   count(*)
		from `member_apply_drawing`
		<include refid="getCondition"/>
	</select>
	
	<select id="getMemberApplyDrawings" parameterType="java.util.Map" resultMap="MemberApplyDrawingResult">
		select
		   *
		from `member_apply_drawing`
		<include refid="getCondition"/>
		order by `id` desc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	<update id="update" parameterType="com.sln.entity.member.MemberApplyDrawing">
        update `member_apply_drawing` 
    	<set>
			<if test="memberId != null">`member_id`= #{memberId},</if>
			<if test="memberName != null">`member_name`= #{memberName},</if>
			<if test="code != null">`code`= #{code},</if>
			<if test="money != null">`money`= #{money},</if>
			<!-- <if test="createTime != null">`create_time`= #{createTime},</if> -->
			<if test="auditingTime != null">`auditing_time`= #{auditingTime},</if>
			<if test="handleTime != null">`handle_time`= #{handleTime},</if>
			<if test="bank != null">`bank`= #{bank},</if>
			<if test="bankCode != null">`bank_code`= #{bankCode},</if>
			<if test="state != null">`state`= #{state},</if>
			<if test="failReason != null">`fail_reason`= #{failReason},</if>
			<if test="optId != null">`opt_id`= #{optId},</if>
			<if test="optName != null">`opt_name`= #{optName}</if>
	    </set>
        where `id` = #{id}
	</update>
	
	<update id="auditing">
        update `member_apply_drawing` 
    	set `auditing_time`= now(),
			`opt_id`= #{optId},
			`opt_name`= #{optName},
			`state`= #{state}
        where `id` in 
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
            ${item}
        </foreach>
	</update>
	
	<insert id="save" parameterType="com.sln.entity.member.MemberApplyDrawing" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		`member_apply_drawing`
		(
			`member_id`,
			`member_name`,
			`code`,
			`money`,
			`create_time`,
			`auditing_time`,
			`handle_time`,
			`bank`,
			`bank_code`,
			`state`,
			`fail_reason`,
			`opt_id`,
			`opt_name`
		)
		values
		(
			#{memberId},
			#{memberName},
			#{code},
			#{money},
			now(),
			#{auditingTime},
			#{handleTime},
			#{bank},
			#{bankCode},
			#{state},
			#{failReason},
			#{optId},
			#{optName}
		)
	</insert>
</mapper>