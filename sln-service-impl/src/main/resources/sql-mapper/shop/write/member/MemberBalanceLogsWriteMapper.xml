<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sln.dao.shop.write.member.MemberBalanceLogsWriteDao">
	<resultMap id="MemberBalanceLogsResult" type="com.sln.entity.member.MemberBalanceLogs">
			<result property="id" column="id" />
			<result property="memberId" column="member_id" />
			<result property="memberName" column="member_name" />
			<result property="moneyBefore" column="money_before" />
			<result property="moneyAfter" column="money_after" />
			<result property="money" column="money" />
			<result property="createTime" column="create_time" />
			<result property="state" column="state" />
			<result property="remark" column="remark" />
			<result property="optId" column="opt_id" />
			<result property="optName" column="opt_name" />
	</resultMap>
	<select id="get" parameterType="Integer" resultMap="MemberBalanceLogsResult">
		select
		   *
		from `member_balance_logs`
		where `id` = #{id}
	</select>
	
	<update id="update" parameterType="com.sln.entity.member.MemberBalanceLogs">
        update `member_balance_logs` 
    	<set>
			<if test="memberId != null">`member_id`= #{memberId},</if>
			<if test="memberName != null">`member_name`= #{memberName},</if>
			<if test="moneyBefore != null">`money_before`= #{moneyBefore},</if>
			<if test="moneyAfter != null">`money_after`= #{moneyAfter},</if>
			<if test="money != null">`money`= #{money},</if>
			<!-- <if test="createTime != null">`create_time`= #{createTime},</if> -->
			<if test="state != null">`state`= #{state},</if>
			<if test="remark != null">`remark`= #{remark},</if>
			<if test="optId != null">`opt_id`= #{optId},</if>
			<if test="optName != null">`opt_name`= #{optName}</if>
	    </set>
        where `id` = #{id}
	</update>
	
	<insert id="save" parameterType="com.sln.entity.member.MemberBalanceLogs" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		`member_balance_logs`
		(
			`member_id`,
			`member_name`,
			`money_before`,
			`money_after`,
			`money`,
			`create_time`,
			`state`,
			`remark`,
			`opt_id`,
			`opt_name`,
			`member_two_Id`,
			`member_two_name`
		)
		values
		(
			#{memberId},
			#{memberName},
			#{moneyBefore},
			#{moneyAfter},
			#{money},
			now(),
			#{state},
			#{remark},
			#{optId},
			#{optName},
			#{memberTwoId},
			#{memberTwoName}
		)
	</insert>

	<delete id="del">
        delete from `member_balance_logs` where `id` = #{id}
	</delete>
</mapper>