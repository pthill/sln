<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sln.dao.shop.read.portal.PortalMenuReadDao">
	<resultMap id="PortalMenuResult" type="com.sln.entity.portal.PortalMenu">
			<result property="id" column="id" />
			<result property="name" column="name" />
			<result property="order" column="order" />
			<result property="abbreviation" column="abbreviation" />
			<result property="code" column="code" />
			<result property="url" column="url" />
			<result property="state" column="state" />
		    <result property="isShow" column="is_show" />
		    <result property="parkName" column="parkName" />
		    <result property="count" column="count" />
	</resultMap>
	
	<select id="get" parameterType="Integer" resultMap="PortalMenuResult">
		SELECT
	p.id,p.name,p.`order`,p.is_show,p.abbreviation,p.state,p.url,p.code,x.parkName
    FROM
	portal_menu p
    INNER JOIN (
	SELECT
		m.portal_menu_id,
		group_concat(m.park_id) AS parkName
	FROM
		portal_menu_park m
	WHERE
		m.portal_menu_id = #{id}
    ) x ON p.id = x.portal_menu_id
	</select>

	<select id="getPage"  resultMap="PortalMenuResult">
		SELECT
			m.id,
			m.`name`,
			m.`code`,
			m.`order`,
			m.abbreviation,
			m.state,
			m.url,
		    m.is_show,
		    x.parkName
		FROM
			portal_menu m
		INNER JOIN (
			SELECT
				m.portal_menu_id,
				group_concat(p.park_name) AS parkname,
				group_concat(p.id) AS parkId
			FROM
				portal_menu_park m
			INNER JOIN (
				SELECT
					p.portal_menu_id
				FROM
					portal_menu_park p
				GROUP BY
					p.portal_menu_id
			) x ON x.portal_menu_id = m.portal_menu_id
			INNER JOIN park p ON p.id = m.park_id
			GROUP BY
				m.portal_menu_id
		) x ON x.portal_menu_id = m.id
		<include refid="getCondition"/>
		order by m.id desc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>

	<select id="getPageForOperation"  resultMap="PortalMenuResult">
		 SELECT
            m.id,
			m.`name`,
			m.`code`,
			m.`order`,
			m.abbreviation,
			m.state,
			m.url,
		    m.is_show
            from (SELECT p.portal_menu_id from portal_menu_park  p where p.park_id=#{queryMap.parkId})x
            left join portal_menu m on x.portal_menu_id=m.id
		<include refid="getCondition"/>
		order by m.id desc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>

	<select id="getPageCountForOperation" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT count(1)
        from (SELECT p.portal_menu_id from portal_menu_park p where p.park_id=#{queryMap.parkId})x
        left join portal_menu m on x.portal_menu_id=m.id
		<include refid="getCondition"/>
	</select>

	<select id="getPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1)
		from `portal_menu` m
		<include refid="getCondition"/>
	</select>

	<sql id="getCondition">
		<where>
			<if test="queryMap.q_name != null and queryMap.q_name !=''">
				and m.name like CONCAT('%',#{queryMap.q_name},'%')
			</if>
			<if test="queryMap.q_state != null and queryMap.q_state !=''">
				and m.state = #{queryMap.q_state}
			</if>
		</where>
	</sql>

	<select id="isCodeExist"  resultType="java.lang.Integer">
		select count(1)
		from `portal_menu`
		where `code` = #{code}
		<if test="id != null">
			and id != #{id}
		</if>
	</select>

	<select id="isOrderExist"  resultType="java.lang.Integer">
		select count(1)
		from `portal_menu`
		where `order` = #{order}
		<if test="id != null">
			and id != #{id}
		</if>
	</select>

	<select id="isAbbreviationExist"  resultType="java.lang.Integer">
		select count(1)
		from `portal_menu`
		where `abbreviation` = #{abbreviation}
		<if test="id != null">
			and id != #{id}
		</if>
	</select>

	<select id="getMenusByParkId"  resultMap="PortalMenuResult">
	SELECT if((select count(1) from portal_service p where p.menu_id=x.portal_menu_id and (p.state=1 or (p.state=1 and p.is_show=1)))=0,'0','1')count,
	p.* FROM
	(SELECT mp.portal_menu_id	FROM portal_menu_park mp WHERE mp.park_id = #{parkId}) x
	LEFT JOIN portal_menu p ON p.id = x.portal_menu_id
	WHERE p.state = 1 OR (p.state = 0 AND p.is_show = 1) order by p.order ASC
	</select>
</mapper>