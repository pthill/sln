<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sln.dao.shop.write.product.ProductNormWriteDao">

    <insert id="insertNorm" >
        insert into product_norm (`name`,`sort`,`type`,`create_id`,`create_time`,`update_id`,`update_time`,`state`)
        values (
        #{name},#{sort},1,#{createId},now(),#{updateId},now(),#{state}
        )
        <selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateNorm">
        update product_norm t
        <set>
            update_time = now(),
            <if test="name != null and name != ''">
                t.name = #{name},
            </if>
            <if test="sort != null">
                t.sort = #{sort},
            </if>
            <if test="type != null">
                t.type = #{type},
            </if>
            <if test="state != null">
                t.state = #{state},
            </if>
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
        </set>
        where t.id = #{id}
    </update>
    <select id="countNorm" resultType="java.lang.Integer">
        select count(1) from product_norm t
        <include refid="pageNormWhere"/>
    </select>
   
    <select id="getNormByPage" resultType="com.sln.entity.product.ProductNorm">
        select * from product_norm t
        <include refid="pageNormWhere"/>
        order by sort desc,id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
    <select id="listNoPage" resultType="com.sln.entity.product.ProductNorm">
        select * from product_norm t
        where state != 0
        order by sort desc,id desc
    </select>
    
    <select id="getNormById" resultType="com.sln.entity.product.ProductNorm">
        select * from product_norm t
        where t.id = #{id}
    </select>
    <select id="getNormByIds" resultType="com.sln.entity.product.ProductNorm">
        select * from product_norm t
        where t.id in(${ids})
    </select>
    <sql id="pageNormWhere">
        <where>
            state != 0
            <if test="param1.q_name != null and param1.q_name != ''">
                and t.name like CONCAT('%',#{param1.q_name},'%')
            </if>
            <if test="param1.q_type != null and param1.q_type != ''">
                and t.type = #{param1.q_type}
            </if>
            <if test="param1.q_state != null and param1.q_state != ''">
                and t.state = #{param1.q_state}
            </if>
        </where>
    </sql>


    <insert id="insertNormAttr">
        insert into product_norm_attr (
            `name`,`product_norm_id`,`sort`,`create_id`,`create_time`,`image`
        ) values (
            #{name},#{productNormId},#{sort},#{createId},now(),#{image}
        )
    </insert>
    <update id="updateNormAttr">
        update product_norm_attr t
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="productNormId != null and productNormId != ''">
                product_norm_id = #{productNormId},
            </if>
            <if test="sort != null and sort != ''">
                sort = #{sort},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="delAttr">
        delete from product_norm_attr where id = #{id}
    </delete>
    <delete id="delAttrByNormId">
        delete from product_norm_attr where product_norm_id = #{id}
    </delete>
    <select id="getNormAttrById" resultType="com.sln.entity.product.ProductNormAttr">
        select * from product_norm_attr where id = #{id}
    </select>
    <select id="getAttrByNormId" resultType="com.sln.entity.product.ProductNormAttr">
        select * from product_norm_attr where product_norm_id = #{id} order by sort desc
    </select>
    <select id="getAttrByNormIds" resultType="com.sln.entity.product.ProductNormAttr">
        select * from product_norm_attr where product_norm_id in (#{ids}) order by sort desc
    </select>
    <select id="countNormAttr" resultType="java.lang.Integer">
        select count(1) from product_norm_attr t, product_norm t1
        <include refid="pageNormAttrWhere"/>
    </select>
    <select id="getNormAttrByPage" resultType="com.sln.entity.product.ProductNormAttr">
        select t.*, t1.name productNormName from product_norm_attr t, product_norm t1
        <include refid="pageNormAttrWhere"/>
        order by sort desc,id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    <sql id="pageNormAttrWhere">
        <where>
            t.product_norm_id = t1.id
            <if test="param1.q_name != null and param1.q_name != ''">
                and t.name like CONCAT('%',#{param1.q_name},'%')
            </if>
            <if test="param1.q_productNormId != null and param1.q_productNormId != ''">
                and t.productNormId like CONCAT('%',#{param1.q_productNormId},'%')
            </if>
        </where>
    </sql>

    <insert id="insertNormAttrOpt">
        insert into product_norm_attr_opt (
            `product_norm_id`,`product_id`,`seller_id`,`type_attr`,`type`,`name`,`image`,`create_id`,`create_time`
        ) values (
            #{productNormId},#{productId},#{sellerId},#{typeAttr},#{type},#{name},#{image},#{createId},now()
        )
    </insert>
    <update id="updateNormAttrOpt">
        update product_norm_attr_opt t
        <set>
            <if test="productNormId != null and productNormId != ''">
                t.product_norm_id = #{productNormId},
            </if>
            <if test="productId != null and productId != ''">
                t.product_id = #{productId},
            </if>
            <if test="typeAttr != null and typeAttr != ''">
                t.type_attr = #{typeAttr},
            </if>
            <if test="type != null and type != ''">
                t.type = #{type},
            </if>
            <if test="image != null and image != ''">
                t.image = #{image},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="delOpt">
        delete from product_norm_attr_opt where id = #{id}
    </delete>
    <select id="getNormAttrOptById" resultType="com.sln.entity.product.ProductNormAttrOpt">
        select * from product_norm_attr_opt where id = #{id}
    </select>
    <select id="countNormAttrOpt" resultType="java.lang.Integer">
        select count(1) from product_norm_attr_opt t
        <include refid="pageNormAttrOptWhere"/>
    </select>
    <select id="getNormAttrOptByPage" resultType="com.sln.entity.product.ProductNormAttrOpt">
        select * from product_norm_attr_opt t
        <include refid="pageNormAttrOptWhere"/>
        order by id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    <sql id="pageNormAttrOptWhere">
        <where>
            <if test="param1.q_productNormId != null and param1.q_productNormId != ''">
                and t.product_norm_id = #{param1.q_productNormId}
            </if>
            <if test="param1.q_productId != null and param1.q_productId != ''">
                and t.product_id = #{param1.q_productId}
            </if>
            <if test="param1.q_sellerId != null and param1.q_sellerId != ''">
                and t.seller_id = #{param1.q_sellerId}
            </if>
            <if test="param1.q_typeAttr != null and param1.q_typeAttr != ''">
                and t.type_attr = #{param1.q_typeAttr}
            </if>
            <if test="param1.q_type != null and param1.q_type != ''">
                and t.type = #{param1.q_type}
            </if>
            <if test="param1.q_name != null and param1.q_name != ''">
                and t.name like CONCAT('%',#{param1.q_name},'%')
            </if>
            <if test="param1.attrId != null">
                and t.attr_id = #{param1.attrId}
            </if>
        </where>
    </sql>
    
    <!-- seller start -->
	<delete id="deleteProductNormOptByProductId">
        delete from product_norm_attr_opt where product_id = #{proid}
    </delete>
    <!-- seller end -->
</mapper>