<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sln.dao.shop.write.bidding.ActBiddingWriteDao">
	<resultMap id="ActBiddingResult" type="com.sln.entity.bidding.ActBidding">
			<result property="id" column="id" />
			<result property="type" column="type" />
			<result property="typeState" column="type_state" />
			<result property="name" column="name" />
			<result property="descinfo" column="descinfo" />
			<result property="virtualSaleNum" column="virtual_sale_num" />
			<result property="saleNum" column="sale_num" />
			<result property="purchase" column="purchase" />
			<result property="startTime" column="start_time" />
			<result property="endTime" column="end_time" />
			<result property="productId" column="product_id" />
			<result property="marketPrice" column="market_price" />
			<result property="price" column="price" />
			<result property="stock" column="stock" />
			<result property="firstPrice" column="first_price" />
			<result property="firstEndTime" column="first_end_time" />
			<result property="lastEndTime" column="last_end_time" />
			<result property="sortNum" column="sort_num" />
			<result property="isBest" column="is_best" />
			<result property="activityState" column="activity_state" />
			<result property="state" column="state" />
			<result property="auditId" column="audit_id" />
			<result property="auditName" column="audit_name" />
			<result property="reason" column="reason" />
			<result property="image" column="image" />
			<result property="channel" column="channel" />
			<result property="sellerId" column="seller_id" />
			<result property="executeState" column="execute_state" />
			<result property="createTime" column="create_time" />
			<result property="updateTime" column="update_time" />
			<result property="auditOpinion" column="audit_opinion" />
	</resultMap>
	
	<select id="get" parameterType="Integer" resultMap="ActBiddingResult">
		select
		   *
		from `act_bidding`
		where `id` = #{id}
	</select>
	
	<update id="updateState" parameterType="java.lang.Integer">
	 	update `act_bidding`
	 		set `state`= #{state},
	 	 	`update_time`= now()
	 	  	where `id` = #{id}
	</update>
	
	<update id="updateExecuteState" parameterType="java.lang.Integer">
	 	update `act_bidding`
	 		set `execute_state`= #{executeState},
	 	 	`update_time`= now()
	 	  	where `id` = #{id}
	</update>
	
	<select id="getAllEnd" resultMap="ActBiddingResult">
		select 
			* 
		from `act_bidding` 
		where `state` = 3
		and `activity_state` = 2
		and `end_time` &lt; now()
	</select>
	
	<select id="getExecuteStateNo" resultMap="ActBiddingResult">
		select 
			* 
		from `act_bidding` 
		where `state` = 3
		and `activity_state` = 3
		and `execute_state` = 0
		and `first_end_time` &lt; now()
	</select>
	
	<update id="updateActState" parameterType="java.lang.Integer">
	 	update `act_bidding`
	 		set `activity_state`= #{actState},
	 	 	`update_time`= now()
	 	  	where `id` = #{id}
	</update>
	
	<update id="updateStateAndAuditOpinion" parameterType="com.sln.entity.bidding.ActBidding">
	 	update `act_bidding`
	 		set 
	 		`state`= #{state},
	 		`audit_opinion`= #{auditOpinion},
	 	 	`update_time`= now()
	 	  	where `id` = #{id}
	</update>
	
	<!-- <update id="updateStock" parameterType="java.lang.Integer">
	 	update `act_bidding`
	 		set `stock`= `stock` - #{number},
	 	 	`update_time`= now()
	 	  	where `id` = #{id}
	</update>
	
	<update id="updateSaleNum" parameterType="java.lang.Integer">
	 	update `act_bidding`
	 		set `sale_num`= `sale_num` + #{number},
	 	 	`update_time`= now()
	 	  	where `id` = #{id}
	</update> -->
	
	<update id="updateStockAndActualSales">
        update `act_bidding`
        set `stock`= `stock` - #{saleNum},
        	`sale_num` = `sale_num` + #{saleNum}
        where `id` = #{id}
	</update>
	
	<update id="update" parameterType="com.sln.entity.bidding.ActBidding">
        update `act_bidding` 
    	<set>
			<if test="id != null">`id`= #{id},</if>
			<if test="type != null">`type`= #{type},</if>
			<if test="typeState != null">`type_state`= #{typeState},</if>
			<if test="name != null">`name`= #{name},</if>
			<if test="descinfo != null">`descinfo`= #{descinfo},</if>
			<if test="virtualSaleNum != null">`virtual_sale_num`= #{virtualSaleNum},</if>
			<if test="saleNum != null">`sale_num`= #{saleNum},</if>
			<if test="purchase != null">`purchase`= #{purchase},</if>
			<if test="startTime != null">`start_time`= #{startTime},</if>
			<if test="endTime != null">`end_time`= #{endTime},</if>
			<if test="productId != null">`product_id`= #{productId},</if>
			<if test="marketPrice != null">`market_price`= #{marketPrice},</if>
			<if test="price != null">`price`= #{price},</if>
			<if test="stock != null">`stock`= #{stock},</if>
			<if test="firstPrice != null">`first_price`= #{firstPrice},</if>
			<if test="firstEndTime != null">`first_end_time`= #{firstEndTime},</if>
			<if test="lastEndTime != null">`last_end_time`= #{lastEndTime},</if>
			<if test="sortNum != null">`sort_num`= #{sortNum},</if>
			<if test="isBest != null">`is_best`= #{isBest},</if>
			<if test="activityState != null">`activity_state`= #{activityState},</if>
			<if test="state != null">`state`= #{state},</if>
			<if test="auditId != null">`audit_id`= #{auditId},</if>
			<if test="auditName != null">`audit_name`= #{auditName},</if>
			<if test="reason != null">`reason`= #{reason},</if>
			<if test="image != null">`image`= #{image},</if>
			<if test="channel != null">`channel`= #{channel},</if>
			<if test="sellerId != null">`seller_id`= #{sellerId},</if>
			<if test="executeState != null">`execute_state`= #{executeState},</if>
			<if test="createTime != null">`create_time`= #{createTime},</if>
			`update_time`= now()
	    </set>
        where `id` = #{id}
	</update>
	
	<insert id="insert" parameterType="com.sln.entity.bidding.ActBidding" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		`act_bidding`
		(
			
			`type`,
			`type_state`,
			`name`,
			`descinfo`,
			`virtual_sale_num`,
			`sale_num`,
			`purchase`,
			`start_time`,
			`end_time`,
			`product_id`,
			`market_price`,
			`price`,
			`stock`,
			`first_price`,
			`first_end_time`,
			`last_end_time`,
			`sort_num`,
			`is_best`,
			`activity_state`,
			`state`,
			`audit_id`,
			`audit_name`,
			`reason`,
			`image`,
			`channel`,
			`seller_id`,
			`execute_state`,
			`create_time`,
			`update_time`
		)
		values
		(
			
			#{type},
			#{typeState},
			#{name},
			#{descinfo},
			#{virtualSaleNum},
			#{saleNum},
			#{purchase},
			#{startTime},
			#{endTime},
			#{productId},
			#{marketPrice},
			#{price},
			#{stock},
			#{firstPrice},
			#{firstEndTime},
			#{lastEndTime},
			#{sortNum},
			#{isBest},
			#{activityState},
			#{state},
			#{auditId},
			#{auditName},
			#{reason},
			#{image},
			#{channel},
			#{sellerId},
			#{executeState},
			now(),
			now()
		)
	</insert>
	
	<update id="updateByTypeState" parameterType="Integer">
        update `act_bidding` 
    	set
			`type_state`= #{typeState},
			`update_time`= now()
        where `type`= #{type}
	</update>
	
	<select id="countByType" resultType="java.lang.Integer">
        select count(1) from `act_bidding`
        where `type` = #{type} 
    </select>
</mapper>